services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: amalthea-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: amalthea
    volumes:
      - mongodb_data_prod:/data/db
    networks:
      - amalthea-network-prod
    # Remove port exposure for production security
    # ports:
    #   - "27017:27017"

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amalthea-app-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    networks:
      - amalthea-network-prod
    volumes:
      - ./uploads:/app/uploads
    # Add health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: amalthea-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - amalthea-network-prod

volumes:
  mongodb_data_prod:
    driver: local

networks:
  amalthea-network-prod:
    driver: bridge
